import 'dart:convert';
import 'dart:io' as io;

const srcBudouxVersion = '0.0.3';

const paramsSrc =
    'https://raw.githubusercontent.com/google/budoux/v$srcBudouxVersion/budoux/models/ja-knbc.json';
const unicodeDataSrc =
    'https://raw.githubusercontent.com/google/budoux/v$srcBudouxVersion/budoux/unicode_blocks.json';

Future<int> main(List<String> args) async {
  await Future.wait([genModel(), genUnicodeBlocks()]);
  return 0;
}

Future<void> genModel() async {
  final pwd = Uri.parse(io.Platform.script.path);
  final dist = io.File.fromUri(pwd.resolve('../lib/model_data.dart'));

  final dataAsString = await _fetchAsString(paramsSrc);

  final model =
      '// Code generated by https://github.com/i10416/budoux/core/scripts/gen.dart\n'
      '// based on $paramsSrc\n'
      '// DO NOT EDIT.\n'
      '// ignore_for_file: type=lint\n'
      '// BudouX | Apache License 2.0 | https://github.com/google/budoux/blob/main/LICENSE\n'
      'const Map<String,double> model = $dataAsString;\n';
  await dist.writeAsString(model);
}

Future<void> genUnicodeBlocks() async {
  final pwd = Uri.parse(io.Platform.script.path);
  final dist = io.File.fromUri(pwd.resolve('../lib/unicode_blocks.dart'));

  final dataAsString = await _fetchAsString(unicodeDataSrc);

  final model =
      '// Code generated by https://github.com/i10416/budoux/core/scripts/gen.dart\n'
      '// based on $unicodeDataSrc\n'
      '// DO NOT EDIT.\n'
      '// ignore_for_file: type=lint\n'
      '// BudouX | Apache License 2.0 | https://github.com/google/budoux/blob/main/LICENSE\n'
      'const List<int> codeBlocks = $dataAsString;\n';
  await dist.writeAsString(model);
}

Future<String> _fetchAsString(String src) async {
  final hyperParamsSrc = Uri.parse(src);
  final client = io.HttpClient();
  final req = await client.getUrl(hyperParamsSrc);
  final res = await req.close();
  final collect = await res
      .transform(utf8.decoder)
      .fold<StringBuffer>(StringBuffer(), (sb, element) {
    sb.write(element);
    return sb;
  });
  return collect.toString();
}
